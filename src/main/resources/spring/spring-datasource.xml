<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context-4.0.xsd
           http://www.springframework.org/schema/tx
	       http://www.springframework.org/schema/tx/spring-tx.xsd"
           >


    <!-- 配置数据源 -->
    <bean id="baseDataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close" >
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="3" />
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="50" />
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="10" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="5000" />

    </bean>


    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="baseDataSource"/>

        <!-- Mapper文件存放的位置，当我们的Mapper文件
        跟对应的Mapper接口处于同一位置的时候可以不用指定该属性的值 -->
        <property name="mapperLocations">
            <list>
                <value>classpath:mybatis/com/sp/mapper/*.xml</value>
            </list>
        </property>
        <!--为指定包下的实体类对象起 别名，方便 mapper.xml 文件中的引用-->
        <!--<property name="typeAliasesPackage" value="com.gege.wx.*.entity"/>-->

        <!--加载mybatis的全局属性，如果和此处配置相同，后加载的会覆盖已加载的属性 -->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
    </bean>


    <!--  mybatis 扫描配置包下的接口 自动注册成为 spring bean -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.sp.test.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>


    <!-- 配置事务管理器 -->
    <bean id="txManager"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="baseDataSource" />
    </bean>
    <!-- 配置基于注解的声明式事务 -->
    <tx:annotation-driven transaction-manager="txManager" />
</beans>